class Live2dLoader{constructor(models){let config=models[this.getLive2dIndex(models)];if(!config.mobile&&this.isMobile())return;this.load(config)}getLive2dIndex(models){let index=-1;document.cookie.split(";").forEach(cookie=>{let cookieMap=cookie.split("=");if(cookieMap[0].trim()=="live2d"&&cookieMap[1]>=0&&cookieMap[1]<models.length)index=cookieMap[1]});if(index===-1){index=Math.floor(Math.random()*models.length);document.cookie=`live2d=${index}; expires=`+new Date(Date.now()+864e5).toUTCString()}return index}isMobile(){var WIN=window;var LOC=WIN["location"];var NA=WIN.navigator;var UA=NA.userAgent.toLowerCase();function test(needle){return needle.test(UA)}var IsAndroid=test(/android|htc/)||/linux/i.test(NA.platform+"");var IsIPhone=!IsAndroid&&test(/ipod|iphone/);var IsWinPhone=test(/windows phone/);var device={IsAndroid:IsAndroid,IsIPhone:IsIPhone,IsWinPhone:IsWinPhone};var documentElement=WIN.document.documentElement;for(var i in device){if(device[i]){documentElement.className+=" "+i.replace("Is","").toLowerCase()}}return device.IsAndroid||device.IsIPhone||device.IsWinPhone}async load(config){let canvas=document.createElement("canvas");canvas.id="canvas";document.body.appendChild(canvas);canvas.style.position="fixed";if(config.left)canvas.style.left=config.left;if(config.right)canvas.style.right=config.right;if(config.top)canvas.style.top=config.top;else if(config.bottom)canvas.style.bottom=config.bottom;else canvas.style.bottom=0;if(config.opacity)canvas.style.opacity=config.opacity;if(config.background){canvas.style.background="url("+bg+")";canvas.style.backgroundSize="cover"}this.app=new PIXI.Application({view:document.getElementById("canvas"),width:config.width||800,height:config.height||600,transparent:true,antialias:true,autoStart:true});this.model=await PIXI.live2d.Live2DModel.from(config.role);this.app.stage.addChild(this.model);this.model.position.set(canvas.style.width*.5,canvas.style.height*.5);this.model.scale.set(config.scale||.1);if(config.draggable===true)this.draggable(this.model);this.addListener(config,canvas,this.initMotionIndex())}draggable(model){model.buttonMode=true;model.on("pointerdown",e=>{model.dragging=true;model._pointerX=e.data.global.x-model.x;model._pointerY=e.data.global.y-model.y});model.on("pointermove",e=>{if(model.dragging){model.position.x=e.data.global.x-model._pointerX;model.position.y=e.data.global.y-model._pointerY}});model.on("pointerupoutside",()=>model.dragging=false);model.on("pointerup",()=>model.dragging=false)}initMotionIndex(){let motionIndex=[],definitions=this.model.internalModel.motionManager.definitions[""];if(definitions)definitions.forEach((value,index)=>{let file=this.model.internalModel.motionManager.getMotionFile(value);if(file.match("touch_head")!=null)motionIndex[0]=index;else if(file.match("touch_special")!=null)motionIndex[1]=index;else if(file.match("touch_body")!=null)motionIndex[2]=index});return motionIndex}addListener(config,canvas,motionIndex){document.addEventListener("mouseup",event=>{if(config.pierceThrough!==false){canvas.style.pointerEvents="none";document.elementsFromPoint(event.clientX,event.clientY)[0].dispatchEvent(new MouseEvent("click",{bubbles:true,cancelable:true,view:window}));canvas.style.pointerEvents="auto"}if(this.app.view.offsetLeft<event.clientX&&event.clientX<this.app.view.offsetLeft+this.app.view.width&&this.app.view.offsetTop<event.clientY&&event.clientY<this.app.view.offsetTop+this.app.view.height){let po=this.model.toModelPosition(new PIXI.Point(this.model._pointerX,this.model._pointerY)),hitAreas=this.model.internalModel.hitTest(po.x,po.y);if(Object.keys(this.model.internalModel.hitAreas).length==0){if(this.isHit("TouchHead")){this.model.internalModel.motionManager.startMotion("",motionIndex[0])}else if(this.isHit("TouchSpecial")){this.model.internalModel.motionManager.startMotion("",motionIndex[1])}else{this.model.internalModel.motionManager.startRandomMotion("")}}else{if(hitAreas.includes("head")||hitAreas.includes("Head")){this.model.expression();this.model.motion("Tap")}else if(hitAreas.includes("body")||hitAreas.includes("Body")){this.model.motion("tap_body");this.model.motion("Tap")}else this.model.motion("Tap")}}})}isHit(id){let bounds=this.model.internalModel.getDrawableBounds(id),po=this.model.toModelPosition(new PIXI.Point(this.model._pointerX,this.model._pointerY));let b=bounds.x<po.x&&po.x<bounds.x+bounds.width&&bounds.y<po.y&&po.y<bounds.y+bounds.height;return b}}